type Transaction @entity {
  id: ID!
  blockNumber: BigInt!
  timestamp: BigInt!
  sender: User!
  referral: Referral
  reservations: [Reservation!]! @derivedFrom(field: "transaction")
}

type User @entity {
  id: ID!
  transactions: [Transaction!]! @derivedFrom(field: "sender")
  reservations: [Reservation!]! @derivedFrom(field: "user")
  reservationDays: [UserReservationDay!]! @derivedFrom(field: "user")
  referrals: [Referral!]! @derivedFrom(field: "referrer")
  reservationEffectiveWei: BigInt!
  reservationActualWei: BigInt!
  referralActualWei: BigInt!
  reservationCount: BigInt!
  reservationDayCount: BigInt!
  referralCount: BigInt!
  stakeCount: BigInt!
}

type Reservation @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  user: User!
  investmentDay: BigInt!
  effectiveWei: BigInt!
  actualWei: BigInt!
  referral: Referral
}

type Referral @entity {
  id: ID!
  transaction: Transaction!
  timestamp: BigInt!
  referrer: User!
  referee: User!
  actualWei: BigInt!
}

type UserReservationDay @entity {
  id: ID!
  user: User!
  investmentDay: BigInt!
  effectiveWei: BigInt!
  actualWei: BigInt!
  reservationCount: BigInt!
}

type GlobalReservationDay @entity {
  id: ID!
  investmentDay: BigInt!
  supply: BigInt
  minSupply: BigInt!
  maxSupply: BigInt!
  effectiveWei: BigInt!
  actualWei: BigInt!
  reservationCount: BigInt!
  userCount: BigInt!
}

type GlobalReservationDaySnapshot @entity {
  id: ID!
  timestamp: BigInt!
  investmentDay: BigInt!
  effectiveWei: BigInt!
  actualWei: BigInt!
  reservationCount: BigInt!
  userCount: BigInt!
}

type Global @entity {
  id: ID!
  userCount: BigInt!
  reserverCount: BigInt!
  referrerCount: BigInt!
  cmReferrerCount: BigInt!
  reservationCount: BigInt!
  stakeCount: BigInt!
  stakerCount: BigInt!
  reservationEffectiveWei: BigInt!
  reservationActualWei: BigInt!
}

type Stake @entity {
  id: ID!
  staker: User!
  referrer: User!
  principal: BigInt!
  shares: BigInt!
  cmShares: BigInt!
  startDay: BigInt!
  lockDays: BigInt!
  daiEquivalent: BigInt!
  reward: BigInt
  closeDay: BigInt
  penalty: BigInt
}